| {% load i18n %}
| {% load thumbnail %}

| {% block media %}
| {% endblock media %}

| {% block info %}
section.post-view-info.col-scrollable
  | {% include 'dillo/components/_post_header.pug' with post=post show_tags=false %}
  | {% include 'dillo/components/_post_author_info_from_link.pug' with post=post %}
  | {% include 'dillo/components/_post_description.pug' with post=post is_post_details=true %}
  | {% include 'dillo/components/_post_actions.pug' with post=post is_post_details=True %}
  | {% include 'dillo/components/_post_meta.pug' with post=post is_post_details=True %}

  | {% if request.user.is_anonymous %}
  .btn-toolbar-row
    | {% url 'account_login' as btn_create_url %}
    | {% trans 'Log in to comment' as btn_label %}
    | {% include 'dillo/components/_button_generic.pug' with url=btn_create_url label=btn_label class="btn-primary btn-wide" %}
  hr
  | {% endif %}

  .comments-container
    //- Placeholder for when we need to bring the form back here (e.g. on reply cancel).
    #js-comment-form-placeholder
      | {% include 'dillo/components/_comment_form.pug' %}

    //- Comments are loaded via js here, see below.
    #js-comments(
      data-comments_url="{% url 'comments_list' hash_id=post.hash_id %}"
    )
      .comments-loading
        .bouncing-ball
        span loading comments...

  | {% if related_posts %}
  .post-related-container
    h3 More by #[a(href="{% url 'profile-detail' post.user.username %}") {{ post.user.username }}]

    .post-related-posts
      | {% for related_post in related_posts %}
      | {% thumbnail related_post.thumbnail "640x360" crop="center" as im %}
      | {% if im %}
      a.post-media-item-grid(
        class="js-post-media",
        href="{% url 'post_detail' related_post.hash_id %}",
        data-preview="{{ related_post.media.all.0.video.url_preview }}")

        img.media-thumbnail(
          src="{{ im.url }}",
          width="{{ im.width }}",
          height="{{ im.height }}",
          alt="{{ related_post.user }}")

        | {% if related_post.media.count > 1 %}
        span.post-label-icon
          i.i-layers
        | {% endif %}
      | {% endif %}
      | {% endthumbnail %}
      | {% endfor %}
  | {% endif %}


| {% endblock info %}

| {% block javascript_history %}
script.
  /* When browsing history, if this template is accessed reload the whole page. */
  window.addEventListener("pageshow", function (event) {
    let historyTraversal = event.persisted ||
      (typeof window.performance != "undefined" &&
        window.performance.navigation.type === 2);
    if (historyTraversal) {
      // Handle page restore.
      window.location.reload();
    }
  });
| {% endblock %}

| {% block javascript_comments %}
script.
  function initComments() {

    // Load comments.
    let $commentsContainer = $("#js-comments");
    $.get($commentsContainer.data('comments_url'), function (data) {
      $commentsContainer.html(data);
    });

    // Resize comment field on typing.
    let $commentTextField = $('#id_content');
    if ($commentTextField.length === 0) {return};
    $commentTextField.autoResize();

    // Send comment on Ctrl+Enter.
    $commentTextField.on("keyup", function (e) {
      if ((e.keyCode === 13 || e.key === 'Enter') && e.ctrlKey) {
        $(this).submit();
      }
    });
  };
| {% endblock javascript_comments %}

script.
  $(function () {
    initTooltips();
  });

  function initRelatedThumbnails() {
    loadSinglePostGrid($('.post-related-container'));
  };



| {% block javascript_media %}
script.
  function initEmbedListMedia() {

    //- Find only the media that was loaded in the post
    let $postMediaContainer = $('.post-media-container.js-with-post-detail-media-prefix');

    //- Initialize video players.
    let $videos = $postMediaContainer.find('video');
    let firstPlayerId = $videos.first().attr('id');
    videoPlayersInit($videos);

    //- Autoplay first video, if a video is found
    if (firstPlayerId !== undefined) {
      let p = videojs.getPlayer(firstPlayerId);
      p.play();
    }
    ;

    /* Slide. */
    let initialMedia = 0;

    // If there is a hash #media-N, use that number as initialMedia and scroll there.
    if (window.location.hash) {
      let hash = window.location.hash;

      if (hash.startsWith("#media-")) {
        initialMedia = parseInt(hash.split("-")[1]);
        $('post-view-media').scrollTop($('#media-' + initialMedia).offset().top);
      }
    }
  };

| {% endblock javascript_media %}

| {% block site_footer %}{% endblock site_footer %}
