| {% extends "dillo/base.pug" %}
| {% load i18n %}
| {% load dillo_filters %}

| {% block page_title %}{% if tag_name %}&#35;{{ tag_name }} {% trans 'on' %} {% endif%}{% endblock page_title %}

| {% block sidebar_classes %}hide-xs{% endblock sidebar_classes %}

| {% block content %}
| {% block page_header %}
| {% endblock page_header %}

.container-fluid
  | {% if processing_posts.posts %}
  .posts-processing
    | #[span #[i.spinner-grow]] Your posts are being processed, hold tight...
  | {% endif %}

  .relative
    form.navbar-search.posts-navbar-search(
      id='search-navbar-form',
      action="{% url 'posts_search' %}"
    )
      input.input-form-with-icon.form-control(
        id="search-text",
        type='text',
        placeholder='{% trans "Search..." %}',
        aria-label="Search...",
        aria-describedby='search-submit')
      button#search-navbar-form-submit.btn.btn-link.btn-input-embed(
        data-placement="bottom",
        data-toggle="tooltip",
        type='button',
        title='{% trans "Search" %}')
        span
          i.i-search

  | {% if '/explore/' in request.path_info %}
  .nav-tabbar
    .btn-toolbar-row
      | {% if layout == 'grid' %}
      a.btn.btn-link-bg(
        data-toggle="tooltip",
        data-placement="bottom",
        title="{% trans 'List View' %}",
        href="?layout=list")
        span
          i.i-list
      | {% else %}
      a.btn.btn-link-bg(
        data-toggle="tooltip",
        data-placement="bottom",
        title="{% trans 'Grid View' %}",
        href="?layout=grid")
        span
          i.i-grid
      | {% endif %}

      .dropdown
        .btn-dropdown#dropdown-sorting(data-toggle="dropdown")
          span {{ sort_label }}
        .dropdown-menu
          a.dropdown-item(
            href="{% url 'explore' %}?sort=top",
            class="{% if sort_value == 'top' %}active{% endif %}"
          ) #[i.i-trending]{% trans 'Top Rated' %}
          a.dropdown-item(
            href="{% url 'explore' %}?sort=latest",
            class="{% if sort_value == 'latest' %}active{% endif %}"
          ) #[i.i-events]{% trans 'Most Recent' %}

      | {% if request.user.is_authenticated %}
      a.btn(
        class="{% if '/bookmarks' in request.path_info %}active{% endif %}",
        href="{% url 'bookmarks' %}",
        title="{% trans 'Your Saved Bookmarks' %}")
        span
          i.i-bookmark
          span {% trans 'My Bookmarks' %}
      | {% endif %}

    | {% if request.user.is_authenticated or trending_tags %}
    .post-stream-tags
      ul
        | {% for tag in trending_tags %}
        li
          a.btn-tag(
            class="{% if tag_name and tag_name == tag.name %}active{% endif %}",
            href="{% url 'posts_list_tag' tag %}",
            title="{{ tag.name }}")
            span &#35;{{ tag.name | truncatechars:35 }}
        | {% endfor %}
    | {% endif %}
  | {% endif %}


  //- If we are exploring a tag, show it,
  //- otherwise show the list of trending tags.
  | {% if tag_name %}
  .post-stream-header
    .post-stream-tag-container
      h1 #[i.i-hash]{{ tag_name }}

    .post-stream-follow-count
      div
        | {% include 'dillo/components/_button_follow.pug' with target_object=tag class="btn-primary-alt" %}

      //- TODO: Add posts count.
      | {% if tag_followers_count %}
      .post-stream-count {{ tag_followers_count }} follower{{ tag_followers_count|pluralize }}
      | {% endif %}
  | {% endif %}

  ul#posts-list.post-list(
    class="post-stream-{% if layout == 'grid' %}grid{% else %}list{% endif %}",
    data-embed_url="{{ query_url }}")
    li.post-list-empty
      .bouncing-ball
| {% endblock content %}

| {% block sidebar %}
.sidebar-block
  | {% include 'dillo/components/_footer.pug' %}

| {% endblock sidebar %}

| {% block javascript_extra %}

| {{ processing_posts | json_script:"js-processing-posts" }}

script.
  /* When processing posts are detected, query for their status until they are 'published',
  * and then reload the page. */
  let processingPosts = JSON.parse(document.getElementById('js-processing-posts').textContent);

  function queryPostStatus(hashId) {
    let statusUrl = '/p/' + hashId  + '/status';
    $.get(statusUrl, function (data) {
      if (data.status === 'published') location.reload();
    })
  }

  function queryPostStatuses() {
    for (let i = 0; i < processingPosts.posts.length; i++) {
      let hashId = processingPosts.posts[i]
      queryPostStatus(hashId)
    }
  }

  if (processingPosts.posts) {
    window.setInterval(queryPostStatuses, 3000);
  }

script.
  $(function() {

    let postsList = document.getElementById('posts-list');
    let embedUrl = $(postsList).data('embed_url');

    //- Get content of the next page and append it to the existing list.
    function triggerLoadPosts(ob){

      //- If it's a URL, simply load that.
      if (typeof ob == 'string'){
        $.get(ob, function (data) {
          $(postsList).html(data);
          loadPosts(data);
          twemoji.parse(postsList);
        });

      //- If it's an object (Load More button), remove it and load next page.
      } else {

        //- Get url to load next page.
        let url = embedUrl + ob.data('next_url');

        //- Remove this element to prevent future triggers.
        ob.parents('li').remove();

        $.get(url, function (data) {
          $(postsList).append(data);
          loadPosts(data);
          twemoji.parse(postsList);
        });

      }
    }

    //- Get the embed_url attribute of posts-list.
    triggerLoadPosts(embedUrl);

    //- Trigger on scroll.
    $(window).scroll(function() {
      toggleAutoplay();

      //- Pagination: load more posts when in viewport.
      $('.js-load-more').each(function() {
        if ($(this).is(':in-viewport()')){
          triggerLoadPosts($(this));
        }
      });
    });

    //- Trigger on clicking Load More.
    $('body').on('click', '.js-load-more', function() {
      triggerLoadPosts($(this));
    });
  });
| {% endblock javascript_extra %}

//- This page has infinite scroll, footer is shoveled in the sidebar.
| {% block site_footer %}{% endblock site_footer %}

| {% block body_classes %}is-post-stream{% endblock body_classes %}
