| {% extends "dillo/base_single_card.pug" %}

| {% block head_extra %}
title Users World Map
script(src='//unpkg.com/d3-array')
script(src='//unpkg.com/d3-scale')
script(src='//unpkg.com/globe.gl')
| {% endblock head_extra %}

| {% block content %}
#globe.globe-container

h2#selected-city Click on a city to display users
ul#user-list
| {% endblock content %}

| {% block javascript_extra %}
| {{ locations|json_script:'locations' }}
script.
  function fetchUsersByCity(cityId, cityName) {
    fetch(`/api/users/by-city/${cityId}`)
      .then(response => response.text())
      .then(data => {
        document.getElementById('user-list').innerHTML = data;
        document.getElementById('selected-city').innerText = cityName;
    });
  }
  const locations = JSON.parse(document.getElementById('locations').textContent);
  const elem = document.getElementById('globe');
  const globe = Globe()
    .globeImageUrl('//unpkg.com/three-globe/example/img/earth-dark.jpg')
    .bumpImageUrl('//unpkg.com/three-globe/example/img/earth-topology.png')
    .backgroundImageUrl('//unpkg.com/three-globe/example/img/night-sky.png')
    .showAtmosphere(false) // globe has no atmosphere
    .width(elem.offsetWidth)
    .height(500)
    .pointsData(locations)
    .pointColor(() => '#FFFFFF')
    .pointLabel('cityName')
    .pointAltitude(d => d.count / 100)
    .onPointClick(d => fetchUsersByCity(d.cityId, d.cityName))
    (elem);
  globe.pointOfView({lat: 45, lng: 5, altitude: 0.5});
| {% endblock javascript_extra %}
