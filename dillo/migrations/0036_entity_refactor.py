# Generated by Django 2.2.11 on 2021-01-01 20:50

import dillo.models.mixins
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('dillo', '0035_add_activity_data_jsonb'),
    ]

    operations = [
        migrations.CreateModel(
            name='FuturePost',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(auto_now_add=True, verbose_name='date created'),
                ),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date edited')),
                ('hash_id', models.CharField(blank=True, max_length=20)),
                (
                    'published_at',
                    models.DateTimeField(blank=True, null=True, verbose_name='date published'),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('draft', 'Draft'),
                            ('processing', 'Processing'),
                            ('published', 'Published'),
                        ],
                        default='draft',
                        max_length=20,
                    ),
                ),
                (
                    'visibility',
                    models.CharField(
                        choices=[
                            ('public', 'Public'),
                            ('unlisted', 'Unlisted'),
                            ('private', 'Private'),
                        ],
                        default='public',
                        max_length=20,
                    ),
                ),
                ('title', models.TextField(null=True)),
                ('content', models.TextField(null=True)),
                ('is_hidden_by_moderator', models.BooleanField(default=False)),
                (
                    'community',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='dillo.Community',
                    ),
                ),
                (
                    'tags',
                    taggit.managers.TaggableManager(
                        help_text='A comma-separated list of tags.',
                        through='taggit.TaggedItem',
                        to='taggit.Tag',
                        verbose_name='Tags',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={'ordering': ['-created_at'],},
        ),
        migrations.RunSQL(
            sql="INSERT INTO dillo_futurepost("
            "id,"
            "created_at,"
            "updated_at,"
            "hash_id,"
            "published_at,"
            "status,"
            "visibility,"
            "title,"
            "content,"
            "is_hidden_by_moderator,"
            "community_id,"
            "user_id) "
            "SELECT "
            "id,"
            "created_at,"
            "updated_at,"
            "hash_id,"
            "published_at,"
            "status,"
            "visibility,"
            "title,"
            "content,"
            "is_hidden_by_moderator,"
            "community_id,"
            "user_id "
            "FROM dillo_postwithmedia "
            "LEFT JOIN dillo_post "
            "ON post_ptr_id = id;",
            reverse_sql=migrations.RunSQL.noop,
        ),
        migrations.CreateModel(
            name='FutureRig',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(auto_now_add=True, verbose_name='date created'),
                ),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date edited')),
                ('hash_id', models.CharField(blank=True, max_length=20)),
                (
                    'published_at',
                    models.DateTimeField(blank=True, null=True, verbose_name='date published'),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('draft', 'Draft'),
                            ('processing', 'Processing'),
                            ('published', 'Published'),
                        ],
                        default='draft',
                        max_length=20,
                    ),
                ),
                (
                    'visibility',
                    models.CharField(
                        choices=[
                            ('public', 'Public'),
                            ('unlisted', 'Unlisted'),
                            ('private', 'Private'),
                        ],
                        default='public',
                        max_length=20,
                    ),
                ),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(help_text='The name of the character', max_length=255)),
                ('description', models.TextField(null=True)),
                (
                    'url',
                    models.URLField(
                        help_text='Where to get the rig (Gumroad, Dropbox, etc.)', max_length=550
                    ),
                ),
                ('notes', models.TextField(blank=True, null=True)),
                (
                    'image',
                    models.ImageField(
                        blank=True,
                        height_field='image_height',
                        help_text='A 16:9 preview of the rig',
                        upload_to=dillo.models.mixins.get_upload_to_hashed_path,
                        width_field='image_width',
                    ),
                ),
                ('image_height', models.PositiveIntegerField(null=True)),
                ('image_width', models.PositiveIntegerField(null=True)),
                (
                    'software',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Software compatibility',
                        related_name='future_software',
                        to='dillo.Software',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={'abstract': False,},
        ),
        migrations.RunSQL(
            sql="INSERT INTO dillo_futurerig("
            "id,"
            "created_at,"
            "updated_at,"
            "hash_id,"
            "published_at,"
            "status,"
            "visibility,"
            "author,"
            "name,"
            "description,"
            "url,"
            "notes,"
            "image,"
            "image_height,"
            "image_width,"
            "user_id) "
            "SELECT "
            "id,"
            "created_at,"
            "updated_at,"
            "hash_id,"
            "published_at,"
            "status,"
            "visibility,"
            "author,"
            "name,"
            "description,"
            "url,"
            "notes,"
            "image,"
            "image_height,"
            "image_width,"
            "user_id "
            "FROM dillo_postrig "
            "LEFT JOIN dillo_post "
            "ON post_ptr_id = id;",
            reverse_sql=migrations.RunSQL.noop,
        ),
        migrations.CreateModel(
            name='FutureJob',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(auto_now_add=True, verbose_name='date created'),
                ),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date edited')),
                ('hash_id', models.CharField(blank=True, max_length=20)),
                (
                    'published_at',
                    models.DateTimeField(blank=True, null=True, verbose_name='date published'),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('draft', 'Draft'),
                            ('processing', 'Processing'),
                            ('published', 'Published'),
                        ],
                        default='draft',
                        max_length=20,
                    ),
                ),
                (
                    'visibility',
                    models.CharField(
                        choices=[
                            ('public', 'Public'),
                            ('unlisted', 'Unlisted'),
                            ('private', 'Private'),
                        ],
                        default='public',
                        max_length=20,
                    ),
                ),
                ('title', models.TextField(null=True)),
                ('company', models.CharField(max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('province_state', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(max_length=255)),
                (
                    'contract_type',
                    models.CharField(
                        choices=[
                            ('full-time', 'Full-time'),
                            ('freelance', 'Freelance'),
                            ('internship', 'Internship'),
                        ],
                        default='full-time',
                        max_length=255,
                    ),
                ),
                ('is_remote_friendly', models.BooleanField(default=False)),
                ('description', models.TextField(null=True)),
                ('studio_website', models.URLField(blank=True, max_length=120)),
                ('url_apply', models.URLField(max_length=550)),
                ('software', models.CharField(blank=True, max_length=256)),
                ('level', models.CharField(blank=True, max_length=128)),
                ('starts_at', models.DateField(blank=True, null=True, verbose_name='starts at')),
                ('notes', models.TextField(null=True)),
                (
                    'image',
                    models.ImageField(
                        blank=True,
                        height_field='image_height',
                        upload_to=dillo.models.mixins.get_upload_to_hashed_path,
                        width_field='image_width',
                    ),
                ),
                ('image_height', models.PositiveIntegerField(null=True)),
                ('image_width', models.PositiveIntegerField(null=True)),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={'verbose_name': 'job', 'verbose_name_plural': 'jobs',},
        ),
        migrations.RunSQL(
            sql="INSERT INTO dillo_futurejob("
            "id,"
            "created_at,"
            "updated_at,"
            "hash_id,"
            "published_at,"
            "status,"
            "visibility,"
            "title,"
            "company,"
            "city,"
            "province_state,"
            "country,"
            "contract_type,"
            "is_remote_friendly,"
            "description,"
            "studio_Website,"
            "url_apply,"
            "software,"
            "level,"
            "starts_at,"
            "notes,"
            "image,"
            "image_height,"
            "image_width,"
            "user_id) "
            "SELECT id,"
            "created_at,"
            "updated_at,"
            "hash_id,"
            "published_at,"
            "status,"
            "visibility,"
            "title,"
            "company,"
            "city,"
            "province_state,"
            "country,"
            "contract_type,"
            "is_remote_friendly,"
            "description,"
            "studio_Website,"
            "url_apply,"
            "software,"
            "level,"
            "starts_at,"
            "notes,"
            "image,"
            "image_height,"
            "image_width,"
            "user_id "
            "FROM dillo_postjob "
            "LEFT JOIN dillo_post "
            "ON post_ptr_id = id;",
            reverse_sql=migrations.RunSQL.noop,
        ),
        migrations.DeleteModel('PostWithMedia'),
        migrations.DeleteModel('PostJob'),
        migrations.DeleteModel('PostRig'),
        migrations.DeleteModel('Post'),
        migrations.RenameModel('FuturePost', 'Post'),
        migrations.RenameModel('FutureJob', 'Job'),
        migrations.RenameModel('FutureRig', 'Rig'),
    ]
